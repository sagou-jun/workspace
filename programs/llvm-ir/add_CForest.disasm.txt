
add.o:     file format elf32-v850


Disassembly of section .text:

00000000 <_ResetVector>:
   0:	80 07 00 02 	jr	200 <_Bootup>
	...

00000010 <SYSERR>:
	...

00000020 <HVTRAP>:
	...

00000030 <FETRAP>:
	...

00000040 <TRAP0>:
	...

00000050 <TRAP1>:
	...

00000060 <RIE>:
	...

00000070 <FPPFPI>:
	...

00000080 <UCPOP>:
	...

00000090 <MIP>:
	...

000000a0 <PIE>:
	...

000000b0 <DEBUG>:
	...

000000c0 <MAE>:
	...

000000d0 <RFU>:
	...

000000e0 <FENMI>:
	...

000000f0 <FEINT>:
	...

00000100 <EIINTn0>:
	...

00000110 <EIINTn1>:
	...

00000120 <EIINTn2>:
	...

00000130 <EIINTn3>:
	...

00000140 <EIINTn4>:
	...

00000150 <EIINTn5>:
	...

00000160 <EIINTn6>:
	...

00000170 <EIINTn7>:
	...

00000180 <EIINTn8>:
	...

00000190 <EIINTn9>:
	...

000001a0 <EIINTn10>:
	...

000001b0 <EIINTn11>:
	...

000001c0 <EIINTn12>:
	...

000001d0 <EIINTn13>:
	...

000001e0 <EIINTn14>:
	...

000001f0 <EIINTn15>:
 1f0:	80 07 7e 00 	jr	26e <GoHalt>
	...

00000200 <_Bootup>:
 200:	00 08       	mov	r0, r1
 202:	00 10       	mov	r0, r2
 204:	00 18       	mov	r0, sp
 206:	00 20       	mov	r0, gp
 208:	00 28       	mov	r0, r5
 20a:	00 30       	mov	r0, r6
 20c:	00 38       	mov	r0, r7
 20e:	00 40       	mov	r0, r8
 210:	00 48       	mov	r0, r9
 212:	00 50       	mov	r0, r10
 214:	00 58       	mov	r0, r11
 216:	00 60       	mov	r0, r12
 218:	00 68       	mov	r0, r13
 21a:	00 70       	mov	r0, r14
 21c:	00 78       	mov	r0, r15
 21e:	00 80       	mov	r0, r16
 220:	00 88       	mov	r0, r17
 222:	00 90       	mov	r0, r18
 224:	00 98       	mov	r0, r19
 226:	00 a0       	mov	r0, r20
 228:	00 a8       	mov	r0, r21
 22a:	00 b0       	mov	r0, r22
 22c:	00 b8       	mov	r0, r23
 22e:	00 c0       	mov	r0, r24
 230:	00 c8       	mov	r0, r25
 232:	00 d0       	mov	r0, r26
 234:	00 d8       	mov	r0, r27
 236:	00 e0       	mov	r0, r28
 238:	00 e8       	mov	r0, r29
 23a:	00 f0       	mov	r0, ep
 23c:	00 f8       	mov	r0, lp
 23e:	40 56 00 00 	movhi	0, r0, r10
 242:	2a 56 74 02 	movea	628, r10, r10
 246:	80 ff 04 00 	jarl	24a <_Bootup+0x4a>, lp
 24a:	44 fa       	add	4, lp
 24c:	6a 00       	jmp	[r10]
 24e:	e0 5f 40 10 	stsr	sr0, r11, 2
 252:	90 5a       	shr	16, r11
 254:	cb 5e 07 00 	andi	7, r11, r11
 258:	61 5a       	cmp	1, r11
 25a:	aa 0d       	bne	26e <GoHalt>

0000025c <PE1>:
 25c:	40 56 00 00 	movhi	0, r0, r10
 260:	2a 56 8c 02 	movea	652, r10, r10
 264:	80 ff 04 00 	jarl	268 <PE1+0xc>, lp
 268:	44 fa       	add	4, lp
 26a:	6a 00       	jmp	[r10]
 26c:	95 05       	br	26e <GoHalt>

0000026e <GoHalt>:
 26e:	e0 07 20 01 	halt	
 272:	e5 fd       	br	26e <GoHalt>

00000274 <_EnableCopro>:
 274:	e5 67 40 00 	stsr	sr5, r12, 0
 278:	2d 06 00 00 	mov	0x10000, r13
 27c:	01 00 
 27e:	0d 61       	or	r13, r12
 280:	ec 2f 20 00 	ldsr	r12, sr5, 0
 284:	7f 00       	jmp	[lp]

00000286 <_Halt>:
 286:	e0 07 20 01 	halt	
 28a:	7f 00       	jmp	[lp]

0000028c <_start>:
 28c:	20 a6 ff 00 	movea	255, r0, r20
 290:	35 06 ff ff 	mov	0xffff, r21
 294:	00 00 
 296:	23 06 f0 ff 	mov	0xfedffff0, sp
 29a:	df fe 
 29c:	3e 06 04 00 	mov	0xfedf0004, ep
 2a0:	df fe 
 2a2:	24 06 04 80 	mov	0xfedf8004, gp
 2a6:	df fe 
 2a8:	26 06 80 03 	mov	0x380, r6
 2ac:	00 00 
 2ae:	e6 a7 20 00 	ldsr	r6, sr20, 0
 2b2:	e5 37 40 00 	stsr	sr5, r6, 0
 2b6:	40 3e 03 00 	movhi	3, r0, r7
 2ba:	07 31       	or	r7, r6
 2bc:	e6 2f 20 00 	ldsr	r6, sr5, 0
 2c0:	26 06 04 00 	mov	0xfedf0004, r6
 2c4:	df fe 
 2c6:	27 06 08 00 	mov	0xfedf0008, r7
 2ca:	df fe 
 2cc:	66 07 01 00 	st.w	r0, 0[r6]
 2d0:	06 36 04 00 	addi	4, r6, r6
 2d4:	e7 31       	cmp	r7, r6
 2d6:	b1 fd       	bl	2cc <_start+0x40>
 2d8:	80 ff 40 00 	jarl	318 <___main>, lp
 2dc:	03 1e f0 ff 	addi	-16, sp, sp
 2e0:	00 32       	mov	0, r6
 2e2:	00 3a       	mov	0, r7
 2e4:	00 42       	mov	0, r8
 2e6:	80 ff 72 00 	jarl	358 <_main>, lp
 2ea:	0a 30       	mov	r10, r6
 2ec:	80 ff 04 00 	jarl	2f0 <_exit>, lp

000002f0 <_exit>:
 2f0:	00 02       	callt	0
 2f2:	2a 06 fc 7f 	mov	0xffff7ffc, r10
 2f6:	ff ff 
 2f8:	c6 00       	zxh	r6
 2fa:	20 5e 10 00 	movea	16, r0, r11
 2fe:	6a 37 00 00 	st.h	r6, 0[r10]
 302:	2a 06 fe 7f 	mov	0xffff7ffe, r10
 306:	ff ff 
 308:	6a 5f 00 00 	st.h	r11, 0[r10]
 30c:	3d 06 86 02 	mov	0x286, r29
 310:	00 00 
 312:	fd c7 60 f9 	jarl	[r29], lp
 316:	e5 fd       	br	312 <_exit+0x22>

00000318 <___main>:
 318:	02 02       	callt	2
 31a:	2a 06 04 00 	mov	0xfedf0004, r10
 31e:	df fe 
 320:	2a 57 01 00 	ld.w	0[r10], r10
 324:	60 52       	cmp	0, r10
 326:	8a 1d       	bne	356 <___main+0x3e>
 328:	01 5a       	mov	1, r11
 32a:	2a 06 04 00 	mov	0xfedf0004, r10
 32e:	df fe 
 330:	6a 5f 01 00 	st.w	r11, 0[r10]
 334:	2a 06 04 00 	mov	0xfedf0004, r10
 338:	df fe 
 33a:	2b 06 04 00 	mov	0xfedf0004, r11
 33e:	df fe 
 340:	ea 59       	cmp	r10, r11
 342:	a3 0d       	bnh	356 <___main+0x3e>
 344:	0b e8       	mov	r11, r29
 346:	0a e0       	mov	r10, r28
 348:	3d 57 fd ff 	ld.w	-4[r29], r10
 34c:	ea c7 60 f9 	jarl	[r10], lp
 350:	5c ea       	add	-4, r29
 352:	fc e9       	cmp	r28, r29
 354:	ab fd       	bh	348 <___main+0x30>
 356:	03 02       	callt	3

00000358 <_main>:
 358:	54 1a       	add	-12, sp
 35a:	20 56 48 0d 	movea	3400, r0, r10
 35e:	63 57 01 00 	st.w	r10, 0[sp]
 362:	20 5e fc 08 	movea	2300, r0, r11
 366:	63 5f 05 00 	st.w	r11, 4[sp]
 36a:	00 52       	mov	0, r10
 36c:	23 5f 01 00 	ld.w	0[sp], r11
 370:	23 67 05 00 	ld.w	4[sp], r12
 374:	cc 59       	add	r12, r11
 376:	63 5f 09 00 	st.w	r11, 8[sp]
 37a:	4c 1a       	add	12, sp
 37c:	7f 00       	jmp	[lp]

/*mainä÷êîÇLLVM-IRÇ…ïœä∑ÇµÇΩÉRÅ[Éh*/
; Function Attrs: nounwind uwtable
define i32 @main() #0 {
entry:
  %retval = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %z = alloca i32, align 4
  store i32 0, i32* %retval
  store volatile i32 3400, i32* %x, align 4
  store volatile i32 2300, i32* %y, align 4
  %0 = load volatile i32* %x, align 4
  %1 = load volatile i32* %y, align 4
  %add = add nsw i32 %0, %1
  store volatile i32 %add, i32* %z, align 4
  ret i32 0
}

Disassembly of section .call_table_text:

00000388 <.call_table_text>:
 388:	80 07 61 00 	prepare	{r29, lp}, 0
 38c:	e0 07 44 01 	ctret	
 390:	40 06 7f 00 	dispose	0, {r29, lp}, [lp]
 394:	80 07 e1 00 	prepare	{r28 - r29, lp}, 0
 398:	e0 07 44 01 	ctret	
 39c:	40 06 ff 00 	dispose	0, {r28 - r29, lp}, [lp]
