CFG "digrapho for 'MergeSort' function" {
	label="CFG for 'MergeSort' function";

	Node0x600067ab0 [shape=record,label="{entry:\l  %x.addr = alloca i32*, align 8\l  %left.addr = alloca i32, align 4\l  %right.addr = alloca i32, align 4\l  %mid = alloca i32, align 4\l  %i = alloca i32, align 4\l  %j = alloca i32, align 4\l  %k = alloca i32, align 4\l  %buf = alloca [100 x i32], align 16\l  store i32* %x, i32** %x.addr, align 8\l  store i32 %left, i32* %left.addr, align 4\l  store i32 %right, i32* %right.addr, align 4\l  %0 = load i32* %left.addr, align 4\l  %1 = load i32* %right.addr, align 4\l  %cmp = icmp sge i32 %0, %1\l  br i1 %cmp, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x600067ab0:s0 -> Node0x6000679b0;
	Node0x600067ab0:s1 -> Node0x6000684c0;
	Node0x6000679b0 [shape=record,label="{if.then:                                          \l  br label %return\l}"];
	Node0x6000679b0 -> Node0x600068600;
	Node0x6000684c0 [shape=record,label="{if.end:                                           \l  %2 = load i32* %left.addr, align 4\l  %3 = load i32* %right.addr, align 4\l  %add = add nsw i32 %2, %3\l  %div = sdiv i32 %add, 2\l  store i32 %div, i32* %mid, align 4\l  %4 = load i32** %x.addr, align 8\l  %5 = load i32* %left.addr, align 4\l  %6 = load i32* %mid, align 4\l  call void @MergeSort(i32* %4, i32 %5, i32 %6)\l  %7 = load i32** %x.addr, align 8\l  %8 = load i32* %mid, align 4\l  %add1 = add nsw i32 %8, 1\l  %9 = load i32* %right.addr, align 4\l  call void @MergeSort(i32* %7, i32 %add1, i32 %9)\l  %10 = load i32* %left.addr, align 4\l  store i32 %10, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x6000684c0 -> Node0x600069070;
	Node0x600069070 [shape=record,label="{for.cond:                                         \l  %11 = load i32* %i, align 4\l  %12 = load i32* %mid, align 4\l  %cmp2 = icmp sle i32 %11, %12\l  br i1 %cmp2, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x600069070:s0 -> Node0x600069320;
	Node0x600069070:s1 -> Node0x6000693f0;
	Node0x600069320 [shape=record,label="{for.body:                                         \l  %13 = load i32* %i, align 4\l  %idxprom = sext i32 %13 to i64\l  %14 = load i32** %x.addr, align 8\l  %arrayidx = getelementptr inbounds i32* %14, i64 %idxprom\l  %15 = load i32* %arrayidx, align 4\l  %16 = load i32* %i, align 4\l  %idxprom3 = sext i32 %16 to i64\l  %arrayidx4 = getelementptr inbounds [100 x i32]* %buf, i32 0, i64 %idxprom3\l  store i32 %15, i32* %arrayidx4, align 4\l  br label %for.inc\l}"];
	Node0x600069320 -> Node0x600069c90;
	Node0x600069c90 [shape=record,label="{for.inc:                                          \l  %17 = load i32* %i, align 4\l  %inc = add nsw i32 %17, 1\l  store i32 %inc, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x600069c90 -> Node0x600069070;
	Node0x6000693f0 [shape=record,label="{for.end:                                          \l  %18 = load i32* %mid, align 4\l  %add5 = add nsw i32 %18, 1\l  store i32 %add5, i32* %i, align 4\l  br label %for.cond6\l}"];
	Node0x6000693f0 -> Node0x60006a130;
	Node0x60006a130 [shape=record,label="{for.cond6:                                        \l  %19 = load i32* %i, align 4\l  %20 = load i32* %right.addr, align 4\l  %cmp7 = icmp sle i32 %19, %20\l  br i1 %cmp7, label %for.body8, label %for.end15\l|{<s0>T|<s1>F}}"];
	Node0x60006a130:s0 -> Node0x60006a370;
	Node0x60006a130:s1 -> Node0x60006a470;
	Node0x60006a370 [shape=record,label="{for.body8:                                        \l  %21 = load i32* %i, align 4\l  %idxprom9 = sext i32 %21 to i64\l  %22 = load i32** %x.addr, align 8\l  %arrayidx10 = getelementptr inbounds i32* %22, i64 %idxprom9\l  %23 = load i32* %arrayidx10, align 4\l  %24 = load i32* %i, align 4\l  %idxprom11 = sext i32 %24 to i64\l  %arrayidx12 = getelementptr inbounds [100 x i32]* %buf, i32 0, i64 %idxprom11\l  store i32 %23, i32* %arrayidx12, align 4\l  br label %for.inc13\l}"];
	Node0x60006a370 -> Node0x60006aaf0;
	Node0x60006aaf0 [shape=record,label="{for.inc13:                                        \l  %25 = load i32* %i, align 4\l  %inc14 = add nsw i32 %25, 1\l  store i32 %inc14, i32* %i, align 4\l  br label %for.cond6\l}"];
	Node0x60006aaf0 -> Node0x60006a130;
	Node0x60006a470 [shape=record,label="{for.end15:                                        \l  %26 = load i32* %left.addr, align 4\l  store i32 %26, i32* %i, align 4\l  %27 = load i32* %mid, align 4\l  %add16 = add nsw i32 %27, 1\l  store i32 %add16, i32* %j, align 4\l  %28 = load i32* %left.addr, align 4\l  store i32 %28, i32* %k, align 4\l  br label %for.cond17\l}"];
	Node0x60006a470 -> Node0x60006b1c0;
	Node0x60006b1c0 [shape=record,label="{for.cond17:                                       \l  %29 = load i32* %k, align 4\l  %30 = load i32* %right.addr, align 4\l  %cmp18 = icmp sle i32 %29, %30\l  br i1 %cmp18, label %for.body19, label %for.end57\l|{<s0>T|<s1>F}}"];
	Node0x60006b1c0:s0 -> Node0x60006b440;
	Node0x60006b1c0:s1 -> Node0x60006b550;
	Node0x60006b440 [shape=record,label="{for.body19:                                       \l  %31 = load i32* %i, align 4\l  %32 = load i32* %mid, align 4\l  %cmp20 = icmp sgt i32 %31, %32\l  br i1 %cmp20, label %if.then21, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x60006b440:s0 -> Node0x60006b9b0;
	Node0x60006b440:s1 -> Node0x60006ba10;
	Node0x60006b9b0 [shape=record,label="{if.then21:                                        \l  %33 = load i32* %j, align 4\l  %inc22 = add nsw i32 %33, 1\l  store i32 %inc22, i32* %j, align 4\l  %idxprom23 = sext i32 %33 to i64\l  %arrayidx24 = getelementptr inbounds [100 x i32]* %buf, i32 0, i64 %idxprom23\l  %34 = load i32* %arrayidx24, align 4\l  %35 = load i32* %k, align 4\l  %idxprom25 = sext i32 %35 to i64\l  %36 = load i32** %x.addr, align 8\l  %arrayidx26 = getelementptr inbounds i32* %36, i64 %idxprom25\l  store i32 %34, i32* %arrayidx26, align 4\l  br label %if.end54\l}"];
	Node0x60006b9b0 -> Node0x60006c4d0;
	Node0x60006ba10 [shape=record,label="{if.else:                                          \l  %37 = load i32* %j, align 4\l  %38 = load i32* %right.addr, align 4\l  %cmp27 = icmp sgt i32 %37, %38\l  br i1 %cmp27, label %if.then28, label %if.else34\l|{<s0>T|<s1>F}}"];
	Node0x60006ba10:s0 -> Node0x60006c780;
	Node0x60006ba10:s1 -> Node0x60006c840;
	Node0x60006c780 [shape=record,label="{if.then28:                                        \l  %39 = load i32* %i, align 4\l  %inc29 = add nsw i32 %39, 1\l  store i32 %inc29, i32* %i, align 4\l  %idxprom30 = sext i32 %39 to i64\l  %arrayidx31 = getelementptr inbounds [100 x i32]* %buf, i32 0, i64 %idxprom30\l  %40 = load i32* %arrayidx31, align 4\l  %41 = load i32* %k, align 4\l  %idxprom32 = sext i32 %41 to i64\l  %42 = load i32** %x.addr, align 8\l  %arrayidx33 = getelementptr inbounds i32* %42, i64 %idxprom32\l  store i32 %40, i32* %arrayidx33, align 4\l  br label %if.end53\l}"];
	Node0x60006c780 -> Node0x60006d010;
	Node0x60006c840 [shape=record,label="{if.else34:                                        \l  %43 = load i32* %i, align 4\l  %idxprom35 = sext i32 %43 to i64\l  %arrayidx36 = getelementptr inbounds [100 x i32]* %buf, i32 0, i64 %idxprom35\l  %44 = load i32* %arrayidx36, align 4\l  %45 = load i32* %j, align 4\l  %idxprom37 = sext i32 %45 to i64\l  %arrayidx38 = getelementptr inbounds [100 x i32]* %buf, i32 0, i64 %idxprom37\l  %46 = load i32* %arrayidx38, align 4\l  %cmp39 = icmp sle i32 %44, %46\l  br i1 %cmp39, label %if.then40, label %if.else46\l|{<s0>T|<s1>F}}"];
	Node0x60006c840:s0 -> Node0x60006d670;
	Node0x60006c840:s1 -> Node0x60006d7a0;
	Node0x60006d670 [shape=record,label="{if.then40:                                        \l  %47 = load i32* %i, align 4\l  %inc41 = add nsw i32 %47, 1\l  store i32 %inc41, i32* %i, align 4\l  %idxprom42 = sext i32 %47 to i64\l  %arrayidx43 = getelementptr inbounds [100 x i32]* %buf, i32 0, i64 %idxprom42\l  %48 = load i32* %arrayidx43, align 4\l  %49 = load i32* %k, align 4\l  %idxprom44 = sext i32 %49 to i64\l  %50 = load i32** %x.addr, align 8\l  %arrayidx45 = getelementptr inbounds i32* %50, i64 %idxprom44\l  store i32 %48, i32* %arrayidx45, align 4\l  br label %if.end52\l}"];
	Node0x60006d670 -> Node0x60006df70;
	Node0x60006d7a0 [shape=record,label="{if.else46:                                        \l  %51 = load i32* %j, align 4\l  %inc47 = add nsw i32 %51, 1\l  store i32 %inc47, i32* %j, align 4\l  %idxprom48 = sext i32 %51 to i64\l  %arrayidx49 = getelementptr inbounds [100 x i32]* %buf, i32 0, i64 %idxprom48\l  %52 = load i32* %arrayidx49, align 4\l  %53 = load i32* %k, align 4\l  %idxprom50 = sext i32 %53 to i64\l  %54 = load i32** %x.addr, align 8\l  %arrayidx51 = getelementptr inbounds i32* %54, i64 %idxprom50\l  store i32 %52, i32* %arrayidx51, align 4\l  br label %if.end52\l}"];
	Node0x60006d7a0 -> Node0x60006df70;
	Node0x60006df70 [shape=record,label="{if.end52:                                         \l  br label %if.end53\l}"];
	Node0x60006df70 -> Node0x60006d010;
	Node0x60006d010 [shape=record,label="{if.end53:                                         \l  br label %if.end54\l}"];
	Node0x60006d010 -> Node0x60006c4d0;
	Node0x60006c4d0 [shape=record,label="{if.end54:                                         \l  br label %for.inc55\l}"];
	Node0x60006c4d0 -> Node0x60006e830;
	Node0x60006e830 [shape=record,label="{for.inc55:                                        \l  %55 = load i32* %k, align 4\l  %inc56 = add nsw i32 %55, 1\l  store i32 %inc56, i32* %k, align 4\l  br label %for.cond17\l}"];
	Node0x60006e830 -> Node0x60006b1c0;
	Node0x60006b550 [shape=record,label="{for.end57:                                        \l  br label %return\l}"];
	Node0x60006b550 -> Node0x600068600;
	Node0x600068600 [shape=record,label="{return:                                           \l  ret void\l}"];
}
